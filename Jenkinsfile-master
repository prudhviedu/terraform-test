def get_changed_dir() {
    sh "build-support/check-effected.sh > effected_dir"
    readFileIntoLines("effected_dir")
}
def readFileIntoLines(filename) {
    def contents = readFile(filename)
    if (contents.trim() == "") {
        return []
    } else {
        return contents.split("\n")
    }
}

pipeline {
	agent any
	parameters {
		choice choices: ['test-env', 'dev-env', 'preprod-env', 'alpha-env', 'beta-env', 'prod-env'], description: '', name: 'deploy_env'
		string defaultValue: 'us-east-1', description: '', name: 'deploy_region', trim: true
		string defaultValue: 'nill', description: '', name: 'tagVersion', trim: true
	}
	stages {
		stage ('checkout') {
			steps {
				checkout([$class: 'GitSCM', branches: [[name: "${params.tagVersion}"]],userRemoteConfigs: [[url: 'https://github.com/prudhviedu/terraform-test.git',credentialsId: 'GitUI']]])

				echo "current git sha is ${env.GIT_BRANCH} and branch is ${env.GIT_COMMIT}"
			}
		}
		stage ('check_changes') {
			environment {
				git_changes = get_changed_dir()
				environment = ${params.deploy_env}
				region = ${params.deploy_region}
			}

			steps {
				echo "changes deducted in ${env.git_changes}"
			}
		}
		stage ('test_cases_run') {
			steps {
				echo 'Running the test_cases'
				echo "${params.deploy_env} ${params.deploy_env}"
				sh 'chmod u+x build-support/test_cases_run_master.sh'
				sh 'echo "parameter are ${env.environment} ${env.region}"'
				sh "build-support/test_cases_run_master.sh ${env.environment} ${env.region}"
			}
		}
	}
}

