pipeline {
	agent any
	parameters {
		choice choices: ['test-env', 'dev-env', 'preprod-env', 'alpha-env', 'beta-env', 'prod-env'], description: '', name: 'deploy_env'
		string defaultValue: 'us-east-1', description: '', name: 'deploy_region', trim: true
		string defaultValue: 'nill', description: '', name: 'tagVersion', trim: true
	}
	stages {
		stage ('checkout') {
			steps {
				checkout([$class: 'GitSCM', branches: [[name: "${params.tagVersion}"]],userRemoteConfigs: [[url: 'https://github.com/prudhviedu/terraform-test.git',credentialsId: 'GitUI']]])

				echo "current git sha is ${env.GIT_BRANCH} and branch is ${env.GIT_COMMIT}"
			}
		}
		stage ('check_changes') {
			environment {
				changes = sh(script: "build-support/check-effected.sh", returnStdout: true).trim()	
			}
			when {
				expression { env.changes == null }
			}
			steps {
				echo "No changes found in Packer, Terraform and Ansible in this commit ${env.GIT_COMMIT} ..."
				script {
					currentBuild.result = 'SUCCESS'
					sh 'exit 1'
				}
			}
		}
		stage ('test_cases_run') {
			steps {
				echo 'Running the test_cases'
				sh """
				chmod u+x build-support/test_cases_run_master.sh
				build-support/test_cases_run_master.sh ${params.deploy_env} ${params.deploy_region}
				"""
			}
		}
	}
}
